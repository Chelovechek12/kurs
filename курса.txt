Частное учреждение
профессиональная образовательная организация
ТЕХНИКУМ «БИЗНЕС И ПРАВО»

КУРСОВАЯ РАБОТА
Тема
РАЗРАБОТКА БЛОГА КОМПАНИИ INTERMEDIA
По МДК 09.01
Проектирование и разработка веб-приложений
Выполнил
Тубальцев Н.С
Курс, группа
4 курс, группа ИС-4
Специальность
09.02.07 Информационные системы и программирование
Научный руководитель
Мартыненко В.А.

г. Белореченск
2024 г.


















СОДЕРЖАНИЕ
1. ВВЕДЕНИЕ 3
1 АНАЛИТИЧЕСКАЯ ЧАСТЬ 5
1.1 Анализ предметной области 5
1.2 Цели и задачи выполняемой работы 5
1.3 Метод реализации процесса проектирования 6
1.4 Обоснование проектных решений 6
2 ПРОЕКТНАЯ ЧАСТЬ 9
2.1 Техническое задание 9
2.2 Установка и настройка среды разработки 12
2.3 Руководство пользователя 12
2.4 Руководство администратора 20
ЗАКЛЮЧЕНИЕ 24
СПИСОК ИСПОЛЬЗУЕМЫХ ИСТОЧНИКОВ 25
ПРИЛОЖЕНИЕ

ВВЕДЕНИЕ
Актуальность создания блога компании InterMedia обусловлена необходимостью предоставления пользователям актуальной информации о компьютерной технике, новостях и обзорах продуктов. В условиях быстрого развития технологий и увеличения интереса к компьютерной тематике, наличие качественного контента становится критически важным. Блог позволяет не только информировать пользователей, но и взаимодействовать с ними, создавая сообщество вокруг бренда.
Объект исследования:
Объектом исследования является блог компании InterMedia, посвященный компьютерной технике.
Предмет исследования:
Предметом исследования являются процессы взаимодействия пользователей с блогом, а также механизмы, обеспечивающие высокий уровень сервиса и удовлетворенности клиентов.
Цель исследования:
Целью исследования является создание эффективного блога, способствующего улучшению качества обслуживания клиентов и увеличению вовлеченности аудитории.
Задачи исследования:
Изучить рынок контента в области компьютерных технологий и выявить актуальные потребности целевой аудитории.
Рассмотреть существующие блоги, определить их сильные и слабые стороны.
Выбрать ключевые функциональные требования к блогу, исходя из потребностей пользователей.
Спроектировать архитектуру и интерфейс блога, учитывающий удобство навигации и интуитивный дизайн.
Реализовать систему управления пользователями и комментариями, отображение статей блога.
Протестировать блог с целью выявления и устранения возможных проблем.
Методы исследования:
Анализ существующих блогов на рынке контента.
Тестирование визуальных и функциональных возможностей блога с участием реальных пользователей.

1. АНАЛИТИЧЕСКАЯ ЧАСТЬ
1.1 Анализ предметной области
Блог – это информационная система, предназначенная для предоставления контента пользователям через интернет. Его основная цель заключается в предоставлении пользователям возможности удобно и безопасно получать информацию о компьютерной технике, новостях и обзорах продуктов.
Для этого блог должен обеспечивать следующие функции:
Каталог статей с подробным описанием каждой статьи, фотографиями, возможностью комментирования.
Форма для поиска статей по ключевым словам.
Система управления комментариями, которые будут отображаться под статьями.
Личный кабинет, где пользователь может просматривать свои комментарии и подписки на статьи.

1.2 Цели и задачи выполняемой работы
Основными целями создания являются:
Обеспечение эффективного и организованного управления контентом и пользователями.
Улучшение пользовательского опыта и увеличение вовлеченности аудитории.
Предоставление удобного интерфейса для ознакомления с новыми статьями и обзорами.
Для достижения поставленных целей система должна решать следующие задачи:
Предоставление возможности пользователям просматривать статьи блога, а администраторам редактировать и удалять контент.
Сортировка статей по категориям и тегам.
Обеспечение возможности пользователям оставлять комментарии и взаимодействовать с другими читателями.


1.3 Метод реализации процесса проектирования
При проектировании информационной системы был выбран метод типового проектирования ИС. Типовое проектирование ИС предполагает создание системы из готовых типовых элементов. Основополагающим требованием для применения методов типового проектирования является возможность декомпозиции проектируемой ИС на множество составляющих компонентов.
В процессе проектирования были выделены следующие компоненты, необходимые для целостности проекта:
Пользователи - регистрация и авторизация, хранение данных.
Статьи - создание, просмотр, редактирование, удаление, сортировка, хранение данных.
Комментарии - добавление, редактирование и удаление комментариев.
1.4 Обоснование проектных решений
На данном этапе необходимо описать примерную архитектуру разрабатываемой системы. Для создания блога будет использоваться архитектура веб-приложения.
Архитектура веб-приложения включает в себя различные компоненты, такие как пользовательский интерфейс, серверное приложение и базы данных.
Пользовательский интерфейс: это средства, позволяющие пользователю эффективно взаимодействовать с контентом блога. Он может быть написан на HTML, CSS, JavaScript, а также с использованием фреймворков, таких как React или Vue.js.
Серверное приложение: это приложение, которое обрабатывает запросы от пользовательского интерфейса. Оно может быть написано на PHP, Python или Node.js.
База данных: это упорядоченный набор структурированной информации, которая будет храниться в MySQL.
Преимущества архитектуры веб-приложения:
Масштабируемость: возможность добавления новых функций и компонентов.
Отказоустойчивость: если один компонент выйдет из строя, другие могут продолжить работу.
Простота обновления: возможность легкого добавления новых функций.







2. ПРОЕКТНАЯ ЧАСТЬ
2.1 Техническое задание
Полное наименование системы: Информационная система блога компании InterMedia.
Краткое наименование системы: ИС блога.
Назначение системы:
Инструменты, способные упростить и автоматизировать процессы создания, редактирования и комментирования статей. Они позволяют значительно улучшить эффективность взаимодействия с пользователями и обеспечить удобство при получении информации.
Характеристика объектов автоматизации:
Произведённым автоматическим процессом будет являться публикация статей и управление комментариями. Платформа сохранит индивидуальные данные о пользователях, а также информацию о статьях и комментариях.
Требования к системе:
При анализе предметной области разрабатываемой системы были выделены следующие сущности:
пользователи;
статьи;
комментарии.
База данных информационной системы должна состоять из следующих связанных таблиц:
users – таблица, содержащая информацию о пользователях;
articles – таблица, содержащая информацию о статьях;
comments – таблица, содержащая информацию о комментариях.
Данные о пользователях должны размещаться в таблице users: | Имя поля | Тип | Размер | Комментарий | Ограничение | |------------|----------|--------|----------------------------------|------------------| | id | integer | 11 | Идентификатор пользователя | Первичный ключ | | email | varchar | 100 | Электронная почта пользователя | NOT NULL | | username | varchar | 100 | Имя пользователя | NOT NULL | | password | varchar | 255 | Пароль пользователя | NOT NULL | | created_at | datetime | | Дата создания учётной записи | NOT NULL |
Данные о статьях должны размещаться в таблице articles: | Имя поля | Тип | Размер | Комментарий | Ограничение | |------------|----------|--------|----------------------------------|------------------| | id | integer | 11 | Идентификатор статьи | AUTO_INCREMENT, NOT NULL | | title | varchar | 255 | Заголовок статьи | NOT NULL | | content | text | | Содержимое статьи | NOT NULL | | author_id | integer | 11 | Идентификатор автора | NOT NULL | | created_at | datetime | | Дата создания статьи | NOT NULL | | updated_at | datetime | | Дата последнего обновления | NOT NULL |
Данные о комментариях должны размещаться в таблице comments: | Имя поля | Тип | Размер | Комментарий | Ограничение | |------------|----------|--------|----------------------------------|------------------| | id | integer | 11 | Идентификатор комментария | AUTO_INCREMENT, NOT NULL | | article_id | integer | 11 | Идентификатор статьи | NOT NULL | | user_id | integer | 11 | Идентификатор пользователя | NOT NULL | | content | text | | Содержимое комментария | NOT NULL | | created_at | datetime | | Дата создания комментария | NOT NULL |
2.2 Установка и настройка среды разработки
Выбор среды разработки: PhpStorm, Visual Studio Code.
Установка среды разработки: После выбора среды разработки необходимо установить её на компьютер. Для этого можно использовать официальный сайт разработчика или пакетные менеджеры, такие как apt или Pacman.
Установка Apache и MySQL: Веб-приложение на PHP требует сервера Apache и базы данных MySQL для работы. Для установки Apache и MySQL можно использовать пакетные менеджеры, такие как apt-get или yum, или скачать их с официальных сайтов разработчиков. Необходимо также установить PHP и настроить его для работы с Apache и MySQL.
2.3 Руководство пользователя
Требования к квалификации пользователя:
Знание основных навыков работы с компьютером.
Знание основных навыков работы в браузере.
Знание основных навыков работы с веб-приложениями.
Требования к компьютеру пользователя:
Процессор с тактовой частотой 500 МГц или выше.
Оперативная память 512 Мб или более.
Объем свободного пространства на жестком диске не менее 200 Мб.
Интернет-браузер последней версии.
Операции работы с веб-приложением:
Первый вход пользователя на сайт: Неавторизованный пользователь впервые заходит на сайт и знакомится с услугами.
Авторизация пользователя: Пользователь вводит свои данные для входа в систему.
Регистрация пользователя: Пользователь заполняет форму для регистрации и сохраняет информацию о себе в базе данных.
2.4 Руководство администратора
Предназначение:
Система блога компании InterMedia предназначена для организации и корректного отображения статей, а также взаимодействия с пользователями. Она позволяет удобно создавать, редактировать, изменять и удалять статьи, а также управлять комментариями.
Программное обеспечение:
Веб-браузер: Google Chrome, Mozilla Firefox.
Текстовый редактор или IDE: Visual Studio Code, PhpStorm.
Сервер приложений: Apache.
База данных: MySQL.




Инструкция по использованию API:
Главная страница: базовый URL: http://localhost/путь_к_папке/index.php.
Авторизация: отправить POST-запрос на URL /login.php с параметрами: username, password.
Регистрация: отправить POST-запрос на URL /register.php с параметрами: username, email, password.
Добавление статьи: отправить POST-запрос на URL /articles.php с параметрами: title, content, author_id.
Редактирование статьи: отправить POST-запрос на URL /articles.php с параметрами: id, title, content.
Удаление статьи: отправить POST-запрос на URL /articles.php с параметрами: id.
Добавление комментария: отправить POST-запрос на URL /comments.php с параметрами: article_id, user_id, content.

ЗАКЛЮЧЕНИЕ
В процессе разработки блога компании InterMedia были реализованы ключевые принци пы удобства использования и интуитивно понятного интерфейса, что способствует повышению вовлеченности пользователей. Все цели, поставленные в рамках курсовой работы, были успешно достигнуты.
Создание многоуровневой архитектуры блога обеспечило эффективное взаимодействие с базой данных и оптимизацию процессов управления контентом. Разработанный инструмент представляет собой ценный ресурс для пользователей, предоставляя доступ к актуальной информации о компьютерной технике и позволяя взаимодействовать с другими читателями через комментарии.
Задачи были решены на уровне реализации многоуровневой архитектуры, обеспечения быстрого доступа к информации, а также реализации функций добавления, редактирования и удаления статей и комментариев. Эти решения способствуют удобству использования сервера и повышают его функциональность.
Применение современных технологий, таких как язык программирования PHP, веб-сервер Apache, реляционная система управления базами данных MySQL и интерфейс для администрирования, значительно улучшило процесс разработки, сократив время на ручные операции. Все данные, необходимые для функционирования блога, хранятся в базе данных, что обеспечивает надежность и стабильность работы приложения.
Созданное веб-приложение является неотъемлемой частью процесса интернет-контента, предоставляя пользователям эффективный инструмент для получения информации и взаимодействия, что в конечном итоге способствует повышению качества обслуживания и восприятия блога компании InterMedia.


















ПРИЛОЖЕНИЕ
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InterMedia - Блог</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="stel.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
    <header>  

<div class="container"> 

        <ul class="menu-main">
            <li><a href="" class="current">Блог</a></li>
            <li><a href="map.php">Контент</a></li>
            <li><a href="indexx.html">Разработка</a></li>
   
          </ul>

    
  
            <h1>InterMedia</h1>
            <p class="ras">Разработка сайтов и лендингов</p>
            
            <div class="searchs">
                <form action="" method="get">
              
                    <input  class="searc"   name="s" placeholder="Поиск по сайту..." type="search"   >
                
                  </form>
            </div>
     
      <h4 class="inter">InterMedia</h4> 
    </div>
    </header>

  
   <main>
<div class="slova">

    <h2  >Компания InterMedia</h2>

   <p> Компания InterMedia — это динамично развивающаяся организация, специализирующаяся на разработке современных и функциональных веб-сайтов для бизнеса и частных клиентов. Наша команда состоит из опытных профессионалов в области веб-дизайна, программирования и цифрового маркетинга, что позволяет нам создавать уникальные решения, отвечающие потребностям наших клиентов.
    
    <h2>Основные направления нашей деятельности:</h2>
    
   <p> Разработка веб-сайтов: мы создаем сайты, которые не только привлекают внимание, но и удобны в использовании. Независимо от того, нужен ли вам корпоративный сайт, интернет-магазин или личный блог, мы обеспечим индивидуальный подход к каждому проекту.
    Ведение блогов: мы активно делимся своим опытом и знаниями в блогах, где рассказываем о последних тенденциях в веб-разработке, делимся полезными советами и кейсами из нашей практики. Наша цель — помочь клиентам лучше понять процессы разработки и использования веб-технологий.
    Поддержка и оптимизация: мы не только разрабатываем сайты, но и обеспечиваем их поддержку, обновление и оптимизацию для достижения максимальной эффективности и производительности.
    </p>
   <h2>Наша философия</h2> 
    
   <p> В InterMedia мы верим, что каждый проект — это возможность создать что-то уникальное и полезное. Мы стремимся к постоянному развитию, изучая новые технологии и подходы, чтобы предлагать нашим клиентам самые современные решения.
    Присоединяйтесь к нам в нашем блоге, чтобы быть в курсе последних новостей и тенденций в мире веб-разработки, и давайте вместе создавать что-то удивительное!
</p>
</p>

</div>
  
<div class="stat">

    <h2>
        Топ статьи на 2024 год

    </h2>
<div class="ims">
    <div class="image-container">
    <a href=" map.php">
        <img class="ser" src="image/orig.jpeg" > 
    <div class="overlay">
        <h2 class="text1">Обнволение сервера</h2>
    </div></a>
    </div>
    <div class="image-container">
        <a href="map.php">
   <img class="pg2" src="image/img9.jpg">
  <div class="overlay">
    <h2 class="text2">веб-дизайн</h2>
</div> </a>
  </div>
  <div class="image-container">
    <a href="map.php ">
   <img class="pg3"src="image/Saas_A1.jpg"> 
  <div class="overlay">
  <h2 class="text3">услуги</h2>
</div></a>
</div>
<div class="image-container"><a href="map.php"> 
   <img class="pg4"src="image/1056666-arch-linux-wallpaper-1920x1080-for-ios.jpg">
  <div class="overlay">
    <h2 class="text4">UNIX новости</h2>
</div></a>
</div>

</div>

</div>

<div class=" contact">

<div><h1>У вас есть деловой запрос? </h2></div>

<div><h2>Давайте обсудим! </h2></div>

<div><h4>Оставьте свои контакты, мы свяжемся с вами в ближайшее время.</h2></div>

</div>

<form  method="POST">
    <div class="formContainer">
       
        <hr>
        <label for="email">
           
        </label>
        <input type="text" placeholder="Введите ваше имя" name="name" required>
        <label for="пароль">
          
        </label>
        <input type="email" placeholder="Введите адрес эл.почты" name="email" required>
        <label for="Повторный пароль">
       
        </label>
        <input type="number" placeholder="Введите номер телефона" name="number" required>
        <label>
            <input type="флажок" checked="checked" placeholder="Адрес сайта" name="запомнить" id="проверить"> </label>
        <p>Создайте учётную запись, и следите за новостями <a href="#" style="color: dodgerblue">Зарегистрироваться</a>. </p>
        <div class="btn">
            <button type="отправить" класс="связь">Отправить</button>
        </div>
    </div>
</form>

<?php
// Подключение к базе данных
$servername = "localhost";
$username = "root"; // Ваше имя пользователя
$password = ""; // Ваш пароль
$dbname = "test_db"; // Имя вашей базы данных

// Создание соединения
$conn = new mysqli($servername, $username, $password, $dbname);

// Проверка соединения
if ($conn->connect_error) {
    die("Ошибка подключения: " . $conn->connect_error);
}

// Обработка данных формы
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $name = trim($_POST['name']);
    $email = trim($_POST['email']);
    $phone_number = trim($_POST['number']);

    // Валидация данных
    if (empty($name) || empty($email) || empty($phone_number)) {
        echo '<span style="color: red;">Пожалуйста, заполните все поля.</span>';
    } else {
        // Подготовка SQL-запроса
        $stmt = $conn->prepare("INSERT INTO data (name, email, phone_number) VALUES (?, ?, ?)");
        $stmt->bind_param("sss", $name, $email, $phone_number);

        // Выполнение запроса и проверка на ошибки
        if ($stmt->execute()) {
            echo '<span style="color: green;">Данные успешно отправлены!</span>';
        } else {
            echo '<span style="color: red;">Ошибка: ' . $stmt->error . '</span>';
        }

        // Закрытие подготовленного выражения
        $stmt->close();
    }
}

// Закрытие соединения с базой данных
$conn->close();
?>

</main >

<footer>
<div class="top">
<h3>InterMedia</h3>

<ul class="menu">
    <li><a href="login.php" >Войти</a></li>
    <li><a href="signup.php">Регистрация</a></li>

  </ul>

</div>
<div class="create-line"></div>

<div class="bott">
<div>
<h3>В России: 142601, Московская область, г. Орехово-Зуево, ул. Ленина д. 99 </h3>
</div>
  <div>  В Китае:
   <h3> Room 2904,Kerry Center, No.2008 Renmin South Road,Luohu Community, <br>Nanhu Street,Luohu District, Shenzhen.China Postal code:518005 </h3></div>

</div>

</footer>

  
</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InterMedia - Контент</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="mapa.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
<script async src="https://maps.app.goo.gl/AkC9nf5JHAS1JjVt8"></script>
<script type="module" src="script.js"></script>
</head>
<body>
    <header>  

<div class="container"> 

        <ul class="menu-main">
            <li><a href="main.php" >Блог</a></li>
            <li><a href=""class="current">Контент </a></li>
            <li><a href="indexx.html">Разработка</a></li>
   
          </ul>
    
         
            <h1>InterMedia</h1>
            <p class="ras">Разработка сайтов и лендингов</p>
            
            <div class="searchs">
                <form action="" method="get">
              
                    <input  class="searc"   name="s" placeholder="Поиск по сайту..." type="search"   >
                
                  </form>
            </div>
     
      <h4 class="inter">InterMedia</h4> 
    </div>
    </header>

  
   <main>

  <div class="carta">
    <gmp-map
    center="37.4220656,-122.0840897"
    zoom="10"
    map-id="DEMO_MAP_ID"
    style="height: 200px"
  ><iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d10848.848136397732!2d73.39365775669371!3d61.27021516076168!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x43739773194f954d%3A0x231da0789201f147!2z0KHRg9GA0LPRg9GCLCDQpdCw0L3RgtGLLdCc0LDQvdGB0LjQudGB0LrQuNC5INCw0LLRgtC-0L3QvtC80L3Ri9C5INC-0LrRgNGD0LM!5e0!3m2!1sru!2sru!4v1734328575987!5m2!1sru!2sru" width="1080" height="500" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe></gmp-map></div>


  <div class="stat">

    <h2>
        Топ статьи на 2024 год
        <?php
        // Подключение к базе данных
        $servername = "localhost";
        $username = "root";
        $password = "";
        $dbname = "test_db"; 
        
        $conn = new mysqli($servername, $username, $password, $dbname);
        
        // Проверка соединения
        if ($conn->connect_error) {
            die("Ошибка подключения: " . $conn->connect_error);
        }
    
        // Обработка загрузки
        if (isset($_POST['submit'])) {
            $text = $_POST['text'];
            $image = $_FILES['image']['name'];
            $targetDir = "uploads/";
            $targetFilePath = $targetDir . basename($image);
        
            // Проверка, существует ли папка uploads
            if (!is_dir($targetDir)) {
                mkdir($targetDir, 0755, true); // Создать папку, если она не существует
            }
        
            // Перемещение загруженного файла
            if (move_uploaded_file($_FILES['image']['tmp_name'], $targetFilePath)) {
                // Вставка данных в базу
                $stmt = $conn->prepare("INSERT INTO photos (image_path, text) VALUES (?, ?)");
                if ($stmt) {
                    $stmt->bind_param("ss", $targetFilePath, $text);
                    if ($stmt->execute()) {
                        // Перенаправление после успешной загрузки
                        header("Location: " . $_SERVER['PHP_SELF']);
                        exit();
                    } else {
                        echo "Ошибка при вставке данных в базу: " . $stmt->error;
                    }
                    $stmt->close();
                } else {
                    echo "Ошибка подготовки запроса: " . $conn->error;
                }
            } else {
                echo "Ошибка загрузки файла.";
            }
        }
        
        // Обработка удаления
        if (isset($_POST['delete'])) {
            $id = intval($_POST['id']);
            $stmt = $conn->prepare("DELETE FROM photos WHERE id = ?");
            if ($stmt) {
                $stmt->bind_param("i", $id);
                if ($stmt->execute()) {
                    echo "Запись успешно удалена.";
                } else {
                    echo "Ошибка при удалении записи: " . $stmt->error;
                }
                $stmt->close();
            } else {
                echo "Ошибка подготовки запроса: " . $conn->error;
            }
        }
        
        // Получение существующих записей
        $result = $conn->query("SELECT * FROM photos");
        ?>
        
    </h2>
<div class="ims">
    <div class="image-container">

      <h1>Добавить фотографию и текст</h1>
      <form action="" method="post" enctype="multipart/form-data">
          <input type="file" name="image" required>
          <input type="text" name="text" placeholder="Введите текст" required>
          <button type="submit" name="submit">Загрузить</button> <!-- Кнопка добавления -->
      </form>
  
      <h1>Существующий контент</h1>
      <ul>
          <?php while ($row = $result->fetch_assoc()): ?>
              <li>
                  <?php echo htmlspecialchars($row['text']); ?>
                  <br>
                  <img src="<?php echo htmlspecialchars($row['image_path']); ?>" alt="Изображение" style="max-width: 200px; max-height: 200px;">
                  <form method="post" style="display:inline;">
                      <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                      <button type="submit" name="delete">Удалить</button> <!-- Кнопка удаления -->
                  </form>
              </li>
          <?php endwhile; ?>
      </ul>
<style>
.image-container h1 {
font-size: 30px;

}
.image-container input {
    margin-bottom: 30px;
    left: 20px;
   
}
.image-container button{
    height: 30px;
    border-radius: 10px;

}
.ims img{
list-style-type: none;filter: none; 

}
.ims{
position: relative;


}

</style>
      <?php
      $conn->close();
      ?>
</div>

</div>

</div>

<div class=" contact">

<div><h1>У вас есть деловой запрос? </h2></div>

<div><h2>Давайте обсудим! </h2></div>

<div><h4>Оставьте свои контакты, мы свяжемся с вами в ближайшее время.</h2></div>

</div>
<form  method="POST">
    <div class="formContainer">
       
        <hr>
        <label for="email">
           
        </label>
        <input type="text" placeholder="Введите ваше имя" name="name" required>
        <label for="пароль">
          
        </label>
        <input type="email" placeholder="Введите адрес эл.почты" name="email" required>
        <label for="Повторный пароль">
       
        </label>
        <input type="number" placeholder="Введите номер телефона" name="number" required>
        <label>
            <input type="флажок" checked="checked" placeholder="Адрес сайта" name="запомнить" id="проверить"> </label>
        <p>Создайте учётную запись, и следите за новостями <a href="#" style="color: dodgerblue">Зарегистрироваться</a>. </p>
        <div class="btn">
            <button type="отправить" класс="связь">Отправить</button>
        </div>
    </div>
</form>

<?php
    // Подключение к базе данных
    $servername = "localhost";
    $username = "root"; // Ваше имя пользователя
    $password = ""; // Ваш пароль
    $dbname = "test_db"; // Имя вашей базы данных

    // Создание соединения
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Проверка соединения
    if ($conn->connect_error) {
        die("Ошибка подключения: " . $conn->connect_error);
    }

    // Обработка данных формы
    if ($_SERVER['REQUEST_METHOD'] == 'POST') {
        $name = trim($_POST['name']);
        $email = trim($_POST['email']);
        $phone_number = trim($_POST['number']);

        // Валидация данных
        if (empty($name) || empty($email) || empty($phone_number)) {
            echo "Пожалуйста, заполните все поля.";
        } else {
            // Подготовка SQL-запроса
            $stmt = $conn->prepare("INSERT INTO data (name, email, phone_number) VALUES (?, ?, ?)");
            $stmt->bind_param("sss", $name, $email, $phone_number);

            // Выполнение запроса и проверка на ошибки
            if ($stmt->execute()) {
                echo "Данные успешно отправлены!";
            } else {
                echo "Ошибка: " . $stmt->error;
            }

            // Закрытие подготовленного выражения
            $stmt->close();
        }
    }

    // Закрытие соединения с базой данных
    $conn->close();
    ?>

</main >

<footer>
<div class="top">
<h3>InterMedia</h3>

<ul class="menu">
    <li><a href="login.php" >Войти</a></li>
    <li><a href="signup.php">Регистрация</a></li>

  </ul>

</div>
<div class="create-line"></div>

<div class="bott">
<div>
<h3>В России: 142601, Московская область, г. Орехово-Зуево, ул. Ленина д. 99 </h3>
</div>
  <div>  В Китае:
   <h3> Room 2904,Kerry Center, No.2008 Renmin South Road,Luohu Community, <br>Nanhu Street,Luohu District, Shenzhen.China Postal code:518005 </h3></div>

</div>

</footer>

</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>InterMedia - Разработка</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
    <header>  

<div class="container"> 

        <ul class="menu-main">
            <li><a href="main.php" >Блог</a></li>
            <li><a href="map.php">Контент</a></li>
            <li><a href=""class="current">Разработка</a></li>
   
          </ul>
    
         
            <h1>InterMedia</h1>
            <p class="ras">Разработка сайтов и лендингов</p>
            
            <div class="searchs">
                <form action="" method="get">
              
                    <input  class="searc"   name="s" placeholder="Поиск по сайту..." type="search"   >
                
                  </form>
            </div>
     
      <h4 class="inter">InterMedia</h4> 
    </div>
    </header>

  
    <main>
        <section id="about">
            <h2>О Нас</h2>
            <p>Мы — команда профессионалов, которая создает и продвигает сайты на основе новейших технологий. В нашем блоге мы делимся полезными советами и последними новостями мира блогеров. Мы работаем с клиентами из разных сфер бизнеса и помогаем им достигать их целей через эффективные онлайн-решения.</p>
            <p>Наша миссия — предоставить качественные услуги веб-разработки и маркетинга, чтобы помочь вам расти и развиваться в цифровом пространстве.</p>
            <h3>Наша Команда</h3>
            <p>В нашей команде работают опытные дизайнеры, разработчики и специалисты по SEO, которые готовы предложить вам свою поддержку и экспертизу.</p>
        </section>
        <section id="development">
            <h2>Разработка Сайтов</h2>
            <p>Мы предоставляем широкий спектр услуг по созданию сайтов, от дизайна до SEO-оптимизации. Наши эксперты помогут вам выбрать правильный путь для вашего проекта.</p>
            <h3>Услуги</h3>
            <ul>
                <li><strong>Выбор CMS:</strong> WordPress, Joomla, Drupal и другие.</li>
                <li><strong>Дизайн и UX:</strong> Советы по созданию удобных интерфейсов.</li>
                <li><strong>SEO-оптимизация:</strong> Повышение видимости в поисковых системах.</li>
                <li><strong>Аналитика:</strong> Подробные отчеты и улучшение производительности сайта.</li>
            </ul>
            <h3>Этапы Работы</h3>
            <ol>
                <li>Консультация: Мы обсуждаем ваши идеи и цели.</li>
                <li>Планирование: Разрабатываем стратегию и концепцию.</li>
                <li>Дизайн: Создаем макеты и прототипы.</li>
                <li>Разработка: Программируем и тестируем сайт.</li>
                <li>Запуск: Осуществляем вывод сайта в интернет.</li>
                <li>Поддержка: Обеспечиваем дальнейшее обслуживание и обновления.</li>
            </ol>
        </section>
        <section id="projects">
            <h2>Наши Проекты</h2>
            <p>Вот некоторые из успешных проектов, которые мы реализовали:</p>
            <div class="project-list">
                <div class="project">
                    <h3>Проект 1: E-commerce Платформа</h3>
                    <p>Создание полнофункционального интернет-магазина с интеграцией платежных систем и системой управления товарами.</p>
                    <img src="ecommerce-project.jpg" alt="E-commerce проект" />
                </div>
                <div class="project">
                    <h3>Проект 2: Корпоративный Сайт</h3>
                    <p>Разработка корпоративного сайта для крупной компании с адаптивным дизайном и разделом новостей.</p>
                    <img src="corporate-project.jpg" alt="Корпоративный проект" />
                </div>
                html
                <div class="project">
                    <h3>Проект 3: Блог о Путешествиях</h3>
                    <p>Создание блога для путешественника с возможностью публикации статей и фотографий, а также взаимодействия с подписчиками.</p>
                    <img src="travel-blog.jpg" alt="Блог о путешествиях" />
                </div>
            </div>
            <h3>Дополнительные Проекты</h3>
            <p>Мы также работали над множеством других интересных проектов, включая:</p>
            <ul>
                <li><strong>Проект 4:</strong> Портфолио для дизайнера.</li>
                <li><strong>Проект 5:</strong> Сайт для местного ресторана с онлайн-бронированием столиков.</li>
                <li><strong>Проект 6:</strong> Платформа для обучения с видеоуроками и тестами.</li>
            </ul>
        </section>
        <section id="testimonials">
            <h2>Отзывы Клиентов</h2>
            <blockquote>
                <p>"Команда InterMedia помогла нашему бизнесу выйти на новый уровень! Рекомендуем!"</p>
                <div class="ots">- Анна, владелец малого бизнеса</div>
            </blockquote>
            <hr>
            <blockquote>
                <p>"Профессионализм и внимание к деталям на каждом этапе!"</p>
                <div class="ots">- Иван, предприниматель</div>
            </blockquote>
            <hr>
            <blockquote>
                <p>"Отличный опыт работы с этой командой. Все было сделано вовремя и качественно!"</p>
                <div class="ots">- Ольга, маркетолог</div>
            </blockquote>
            <hr>
        </section>
        <section id="faq">
            <h2>Часто Задаваемые Вопросы</h2>
            <dl>
                <dt>Какова стоимость разработки сайта?</dt>
                <dd>Стоимость варьируется в зависимости от требований и сложности проекта. Мы предоставляем индивидуальные расценки.</dd>
                <dt>Как долго занимает процесс разработки?</dt>
                <dd>В среднем, разработка сайта занимает от 4 до 12 недель. Это зависит от объёма работ и сроков клиента.</dd>
                <dt>Предоставляете ли вы поддержку после завершения проекта?</dt>
                <dd>Да, мы предлагаем различные планы поддержки, включая техническую помощь и обновления контента.</dd>
                <dt>Можно ли внести изменения в проект после его завершения?</dt>
                <dd>Определенно! Мы всегда открыты к изменениям и готовы помочь вам адаптировать сайт под ваши новые требования.</dd>
                <dt>Работаете ли вы с клиентами из других стран?</dt>
                <dd>Да, мы работаем с клиентами по всему миру и можем общаться на разных языках.</dd>
            </dl>
        </section>
        <section class="contact">
            <h2>Контакты</h2>
            <p>Если у вас есть вопросы или вы хотите обсудить проект, свяжитесь с нами через следующие каналы:</p>
            <ul>
                <li><strong>Email:</strong> info@intermedia.com</li>
                <li><strong>Телефон:</strong> +7 (123) 456-78-90</li>
                <li><strong>Адрес:</strong> Москва, ул. Примерная, д. 1</li>
                <li><strong>Социальные сети:</strong></li>
                <li><a href="#">Facebook</a></li>
                <li><a href="#">Instagram</a></li>
                <li><a href="#">LinkedIn</a></li>
            </ul>
           
            </form>
        </section>
    </main>

<footer>
<div class="top">
<h3>InterMedia</h3>

<ul class="menu">
    <li><a href="login.php" >Войти</a></li>
    <li><a href="signup.php">Регистрация</a></li>

  </ul>

</div>
<div class="create-line"></div>

<div class="bott">
<div>
<h3>В России: 142601, Московская область, г. Орехово-Зуево, ул. Ленина д. 99 </h3>
</div>
  <div>  В Китае:
   <h3> Room 2904,Kerry Center, No.2008 Renmin South Road,Luohu Community, <br>Nanhu Street,Luohu District, Shenzhen.China Postal code:518005 </h3></div>

</div>

</footer>

  
</body>
</html>
<?php 
session_start(); 
include "db_conn.php";

if (isset($_POST['uname']) && isset($_POST['password'])) {

    function validate($data){
       $data = trim($data);
       $data = stripslashes($data);
       $data = htmlspecialchars($data);
       return $data;
    }

    $uname = validate($_POST['uname']);
    $pass = validate($_POST['password']);

    if (empty($uname)) {
        header("Location: index.php?error=User  Name is required");
        exit();
    }else if(empty($pass)){
        header("Location: index.php?error=Password is required");
        exit();
    }else{
        // Хеширование пароля
        $pass = md5($pass);

        // Проверка на admin/admin
        if ($uname === 'admin' && $pass === md5('admin')) {
            // Сохранение данных в сессии
            $_SESSION['role_name'] = 'admin';
            $_SESSION['name'] = 'Administrator'; // Можно изменить на нужное имя
            $_SESSION['roles'] = 'admin'; // Установка роли
            header("Location: cons.html"); // Перенаправление на страницу для администраторов
            exit();
        }

        $sql = "SELECT * FROM users WHERE user_name='$uname' AND password='$pass'";

        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) === 1) {
            $row = mysqli_fetch_assoc($result);
            if ($row['user_name'] === $uname && $row['password'] === $pass) {
                $_SESSION['user_name'] = $row['user_name'];
                $_SESSION['name'] = $row['name'];
                $_SESSION['id'] = $row['id'];
                $_SESSION['roles'] = $row['roles']; // Сохранение роли в сессии

                // Перенаправление в зависимости от роли
                if ($row['roles'] === 'admin') {
                    header("Location: cons.html"); // Страница для администраторов
                } else {
                    header("Location: home.php"); // Страница для обычных пользователей
                }
                exit();
            }else{
                header("Location: index.php?error=Incorrect User name or password");
                exit();
            }
        }else{
            header("Location: index.php?error=Incorrect User name or password");
            exit();
        }
    }
    
}else{
    header("Location: index.php");
    exit();
}
<!DOCTYPE html>
<html>
<head>
    <title>LOGIN</title>
    <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
     <form action="login.php" method="post">
        <h2>LOGIN</h2>
        <?php if (isset($_GET['error'])) { ?>
            <p class="error"><?php echo $_GET['error']; ?></p>
        <?php } ?>
        <label>User Name</label>
        <input type="text" name="uname" placeholder="User Name"><br>

        <label>Password</label>
        <input type="password" name="password" placeholder="Password"><br>

        <button type="submit">Login</button>
          <a href="signup.php" class="ca">Create an account</a>
        
     </form>
</body>
</html>
<?php 
session_start();

if (isset($_SESSION['id']) && isset($_SESSION['user_name'])) {

 ?>
<!DOCTYPE html>
<html>
<head>
     <title>HOME</title>
     <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
     <h1>Hello, <?php echo $_SESSION['name']; ?></h1>
     <a href="logout.php">Logout</a>
</body>
</html>

<?php 
}else{
     header("Location: index.php");
     exit();
}
 ?>
<?php

$sname= "localhost";
$unmae= "root";
$password = "";

$db_name = "test_db";

$conn = mysqli_connect($sname, $unmae, $password, $db_name);

if (!$conn) {
    echo "Connection failed!";
}
<?php
// Подключение к базе данных
$servername = "localhost";
$username = "root";
$password = "";
$dbname = "test_db"; 

$conn = new mysqli($servername, $username, $password, $dbname);

// Проверка соединения
if ($conn->connect_error) {
    die("Ошибка подключения: " . $conn->connect_error);
}

// Обработка загрузки
if (isset($_POST['submit'])) {
    $text = $_POST['text'];
    $image = $_FILES['image']['name'];
    $targetDir = "uploads/";
    $targetFilePath = $targetDir . basename($image);

    // Проверка, существует ли папка uploads
    if (!is_dir($targetDir)) {
        mkdir($targetDir, 0755, true); // Создать папку, если она не существует
    }

    // Перемещение загруженного файла
    if (move_uploaded_file($_FILES['image']['tmp_name'], $targetFilePath)) {
        // Вставка данных в базу
        $stmt = $conn->prepare("INSERT INTO photos (image_path, text) VALUES (?, ?)");
        if ($stmt) {
            $stmt->bind_param("ss", $targetFilePath, $text);
            if ($stmt->execute()) {
                // Перенаправление после успешной загрузки
                header("Location: " . $_SERVER['PHP_SELF']);
                exit();
            } else {
                echo "Ошибка при вставке данных в базу: " . $stmt->error;
            }
            $stmt->close();
        } else {
            echo "Ошибка подготовки запроса: " . $conn->error;
        }
    } else {
        echo "Ошибка загрузки файла.";
    }
}

// Обработка удаления
if (isset($_POST['delete'])) {
    $id = intval($_POST['id']);
    $stmt = $conn->prepare("DELETE FROM photos WHERE id = ?");
    if ($stmt) {
        $stmt->bind_param("i", $id);
        if ($stmt->execute()) {
            echo "Запись успешно удалена.";
        } else {
            echo "Ошибка при удалении записи: " . $stmt->error;
        }
        $stmt->close();
    } else {
        echo "Ошибка подготовки запроса: " . $conn->error;
    }
}

// Получение существующих записей
$result = $conn->query("SELECT * FROM photos");
?>

<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Существующий контент</title>
</head>
<body>

<h1>Добавить фотографию и текст</h1>
    <form action="cont.php" method="post" enctype="multipart/form-data">
        <input type="file" name="image" required>
        <input type="text" name="text" placeholder="Введите текст" required>
        <button type="submit" name="submit">Загрузить</button> <!-- Кнопка добавления -->
    </form>

    <h1>Существующий контент</h1>
    <ul>
        <?php while ($row = $result->fetch_assoc()): ?>
            <li>
                <?php echo htmlspecialchars($row['text']); ?>
                <br>
                <img src="<?php echo htmlspecialchars($row['image_path']); ?>" alt="Изображение" style="max-width: 200px; max-height: 200px;">
                <form method="post" style="display:inline;">
                    <input type="hidden" name="id" value="<?php echo $row['id']; ?>">
                    <button type="submit" name="delete">Удалить</button> <!-- Кнопка удаления -->
                </form>
            </li>
        <?php endwhile; ?>
    </ul>
</body>
</html>

<?php
$conn->close();
?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Загрузка фотографий</title>
</head>
<body>
    <h1>Добавить фотографию и текст</h1>
    <form action="cont.php" method="post" enctype="multipart/form-data">
        <input type="file" name="image" required>
        <input type="text" name="text" placeholder="Введите текст" required>
        <button type="submit" name="submit">Загрузить</button> <!-- Кнопка добавления -->
    </form>
</body>
</html>
@import url('https://fonts.googleapis.com/css?family=Ubuntu+Condensed');
.menu-main {
  list-style: none;
  margin: 10px 0 5px;
  text-align: center;
}
.menu-main li {display: inline-block;}
.menu-main li:after {
  content: "|";
  color: #606060;
  display: inline-block;
  vertical-align:top;
}
.menu-main li:last-child:after {content: none;}
.menu-main a {
  text-decoration: none;
  font-family: 'Ubuntu Condensed', sans-serif;
  letter-spacing: 2px;
  position: relative;
  padding-bottom: 20px;
  margin: 0 34px 0 30px;
  font-size: 17px;
  text-transform: uppercase;
  display: inline-block;
  transition: color .2s;
}
.menu-main a, .menu-main a:visited {color: #9d999d;}
.menu-main a.current, .menu-main a:hover{color: #008fa1;}
.menu-main a:before,
.menu-main a:after {
  content: "";
  position: absolute;
  height: 4px;
  top: auto;
  right: 50%;
  bottom: -5px;
  left: 50%;
  background: #008fa1;
  transition: .8s;
}
.menu-main a:hover:before, .menu-main .current:before {left: 0;}
.menu-main a:hover:after, .menu-main .current:after {right: 0;}   
@media (max-width: 550px) {
.menu-main {padding-top: 0;}
.menu-main li {display: block;}
.menu-main li:after {content: none;}
.menu-main a {
  padding: 25px 0 20px; 
  margin: 0 30px;
}
}


p{
    color: white;
}
*{
    font-family:"Roboto";
   
    padding: 0;
 
}

header {
    height: 500px; /* Уберите лишние строки с height */
    position:static;
    top: 0;
    left: 0;
    background-image: url(image/lines.gif);
    background-size: cover;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}


  .searchs{
    margin-top: 180px;
    text-align: center;
  } 

  
  .searc{
    width: 386px;
    height: 30px;
    border: #15171E 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
    background-image: url(/image/icons8-лупа-50.png)  ;
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
  
  
    
  }

  ::placeholder{
    color: #15171E;
  }

  .inter{
    position: relative;
    color: white;
    display: block;
     margin-top: -23px; 
    font-size: 16px;
    right: 8%;
    padding-bottom: 20px;
    float: left;
}
    
  
  
   li, ul {
    color: white;
    
  }
.ras{
    color: white;
    font-size: 32px;
    text-align: center;
    /* translate: (-50%, -50%) */
}

h1{
    color: white;
    
    text-align: center;
    /* translate: (-50%, -50%) */
}


body {
    height: 100vh;
    display: flexbox;
    align-items: center;
    justify-content: center;
    background-color: #15171E;
    margin: 0;
  }

.container {
   
    margin: auto auto;
    text-align: center;
    width: 80%;
    height: 100%;
}

main{
    width: 80%;
    display: block;
    margin: 0 auto;
    text-align: left;
    margin-top: 65px;

}
.carta{
    text-align: center;
    display: block;
    height: 200px;
    width: 100%;
    position: static;
}
.stat{
    color: white;
    margin-top: 30%;

}
.ims{
    margin-top: 40px;
   
   
}

.image-container{
position: relative;


}
.image-container h1{
    font-size: 20px;

}


.text1 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text2 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text3 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text4 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}

.ims a{
color: white;

}

.ser{
    float: left;
 
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}
.pg3{
float: left;

display: flex;
justify-content: space-between;
    flex-direction: column;
}
.contact {
    display: block;
    margin: 20px auto;
    text-align: left;
}

.contact div {
    display: flex; /* Используем flexbox для выравнивания элементов в ряд */
    margin: 20px auto;
    gap: 5px; /* Добавим промежуток между заголовками */
}

.contact h1 {
    font-size: 40px;
    color: #04BFD3;
}

.contact h2 {
    font-size: 36px;
    color: white;
}

.contact h4{
    color: white;
}

input{
    width: 386px;
    height: 30px;
    border: #000000 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
 
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
}
.btn{
    display: flex;
    justify-content: center; /* Центрирует по горизонтали */
    align-items: center;     /* Центрирует по вертикали */
    height: 10vh;    
}

.formContainer button {
    padding: 10px 20px; 
    width: 444px;                        /* Примерные отступы для кнопки */
    height:52px ;
    font-size: 16px;         /* Размер шрифта */
    background-color: #14FDCE; /* Цвет фона кнопки */
    border: none;            /* Убираем обводку */
    border-radius: 10px;      /* Скругление углов */
    color: rgb(0, 0, 0);            /* Цвет текста */
    cursor: pointer;        /* Курсор для кнопки */
}

footer{
    margin-top: 100px;
    background-color:#001A20 ;
  width: 100%;  
   height: 376px;
   text-decoration: none;
   
   
}
.top {
    color: white;
    text-align: left;
    padding-left: 20px;
    padding-top: 15px;
    flex: 1;      
    display: flex;           /* Flexbox для выравнивания элементов в строку */
    justify-content: space-between; /* Пространство между элементами */
    align-items: center;  
     text-decoration: none;       /* Позволяет элементу занять доступное пространство */
}

.menu a{
    text-decoration: none;
    color: white;
    font-size: 16px;
    padding-right: 20px;
}

.menu {
    list-style: none;        /* Убираем стандартные маркеры списка */
    margin: 10px 0 5px;      /* Отступы сверху и снизу */
    padding: 0;              /* Убираем внутренние отступы */
    display: flex;           /* Flexbox для выравнивания элементов в ряд */
    justify-content: flex-end; /* Выравнивание элементов списка по правому краю */
    gap: 15px;     
          /* Промежутки между элементами */
}

.menu li {
    display: inline-block;   /* Элементы списка будут располагаться в строку */
    font-size: 16px;   
            /* Размер шрифта */
}

.menu ul{
text-decoration: none;  

}
.create-line
 { width: 100%;
   border-top: 3px solid #ffffff; 
}
.bott {
    display: block;  /* Элементы будут располагаться в одну строку */
    text-align: left;      /* Выравнивание текста по левому краю */
    color: white;          /* Цвет текста */
    margin: 30px auto;      /* Растягиваем элемент на всю доступную ширину (если нужно) */
}
.bott div{
    padding-left: 20px;
}

<?php 
session_start(); 
include "db_conn.php";

if (isset($_POST['uname']) && isset($_POST['password'])
    && isset($_POST['name']) && isset($_POST['re_password'])) {

    function validate($data){
       $data = trim($data);
       $data = stripslashes($data);
       $data = htmlspecialchars($data);
       return $data;
    }

    $uname = validate($_POST['uname']);
    $pass = validate($_POST['password']);

    $re_pass = validate($_POST['re_password']);
    $name = validate($_POST['name']);

    $user_data = 'uname='. $uname. '&name='. $name;

    if (empty($uname)) {
        header("Location: signup.php?error=User Name is required&$user_data");
        exit();
    }else if(empty($pass)){
        header("Location: signup.php?error=Password is required&$user_data");
        exit();
    }
    else if(empty($re_pass)){
        header("Location: signup.php?error=Re Password is required&$user_data");
        exit();
    }

    else if(empty($name)){
        header("Location: signup.php?error=Name is required&$user_data");
        exit();
    }

    else if($pass !== $re_pass){
        header("Location: signup.php?error=The confirmation password  does not match&$user_data");
        exit();
    }

    else{

        // hashing the password
        $pass = md5($pass);

        $sql = "SELECT * FROM users WHERE user_name='$uname' ";
        $result = mysqli_query($conn, $sql);

        if (mysqli_num_rows($result) > 0) {
            header("Location: signup.php?error=The username is taken try another&$user_data");
            exit();
        }else {
           $sql2 = "INSERT INTO users(user_name, password, name) VALUES('$uname', '$pass', '$name')";
           $result2 = mysqli_query($conn, $sql2);
           if ($result2) {
             header("Location: signup.php?success=Your account has been created successfully");
             exit();
           }else {
                header("Location: signup.php?error=unknown error occurred&$user_data");
                exit();
           }
        }
    }
    
}else{
    header("Location: signup.php");
    exit();
}
<!DOCTYPE html>
<html>
<head>
     <title>SIGN UP</title>
     <link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
     <form action="signup-check.php" method="post">
          <h2>SIGN UP</h2>
          <?php if (isset($_GET['error'])) { ?>
               <p class="error"><?php echo $_GET['error']; ?></p>
          <?php } ?>

          <?php if (isset($_GET['success'])) { ?>
               <p class="success"><?php echo $_GET['success']; ?></p>
          <?php } ?>

          <label>Name</label>
          <?php if (isset($_GET['name'])) { ?>
               <input type="text" 
                      name="name" 
                      placeholder="Name"
                      value="<?php echo $_GET['name']; ?>"><br>
          <?php }else{ ?>
               <input type="text" 
                      name="name" 
                      placeholder="Name"><br>
          <?php }?>

          <label>User Name</label>
          <?php if (isset($_GET['uname'])) { ?>
               <input type="text" 
                      name="uname" 
                      placeholder="User Name"
                      value="<?php echo $_GET['uname']; ?>"><br>
          <?php }else{ ?>
               <input type="text" 
                      name="uname" 
                      placeholder="User Name"><br>
          <?php }?>

          <label>Password</label>
          <input type="password" 
                 name="password" 
                 placeholder="Password"><br>

          <label>Re Password</label>
          <input type="password" 
                 name="re_password" 
                 placeholder="Re_Password"><br>

          <button type="submit">Sign Up</button>
          <a href="index.php" class="ca">Already have an account?</a>
     </form>
</body>
</html>
@import url('https://fonts.googleapis.com/css?family=Ubuntu+Condensed');
.menu-main {
  list-style: none;
  margin: 10px 0 5px;
  
  text-align: center;

}
.menu-main li {display: inline-block;}
.menu-main li:after {
  content: "|";
  color: #606060;
  display: inline-block;
  vertical-align:top;
}
.menu-main li:last-child:after {content: none;}
.menu-main a {
  text-decoration: none;
  font-family: 'Ubuntu Condensed', sans-serif;
  letter-spacing: 2px;
  position: relative;
  padding-bottom: 20px;
  margin: 0 34px 0 30px;
  font-size: 17px;
  text-transform: uppercase;
  display: inline-block;
  transition: color .2s;
}
.menu-main a, .menu-main a:visited {color: #9d999d;}
.menu-main a.current, .menu-main a:hover{color: #008fa1;}
.menu-main a:before,
.menu-main a:after {
  content: "";
  position: absolute;
  height: 4px;
  top: auto;
  right: 50%;
  bottom: -5px;
  left: 50%;
  background: #008fa1;
  transition: .8s;
}
.menu-main a:hover:before, .menu-main .current:before {left: 0;}
.menu-main a:hover:after, .menu-main .current:after {right: 0;}   
@media (max-width: 550px) {
.menu-main {padding-top: 0;}
.menu-main li {display: block;}
.menu-main li:after {content: none;}
.menu-main a {
  padding: 25px 0 20px; 
  margin: 0 30px;
}
}


p{
    color: white;
}

*{
    font-family:"Roboto";
   
    padding: 0;
    text-decoration: none;
    list-style-type: none;
}

header {
    height: 500px; /* Уберите лишние строки с height */
    position:static;
    top: 0;
    left: 0;
    background-image: url(image/lines.gif);
    background-size: cover;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
   
}


  .searchs{
    margin-top: 180px;
    text-align: center;
  } 

  
  .searc{
    width: 386px;
    height: 30px;
    border: #15171E 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
    background-image: url(/image/icons8-лупа-50.png)  ;
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
  
  
    
  }

  ::placeholder{
    color: #15171E;
  }

  .inter{
    position: relative;
    color: white;
    display: block;
     margin-top: -23px; 
    font-size: 16px;
    right: 8%;
    padding-bottom: 20px;
    float: left;
}
    
  
  
   li, ul {
    color: white;
    text-decoration: none;
    
  }
.ras{
    color: white;
    font-size: 32px;
    text-align: center;
    /* translate: (-50%, -50%) */
}

h1{
    color: white;
    font-size: 64px;
    text-align: center;
    /* translate: (-50%, -50%) */
}


body {
    height: 100vh;
    display: flexbox;
    align-items: center;
    justify-content: center;
    background-color: #15171E;
    margin: 0;
  }

.container {
   
    margin: auto auto;
    text-align: center;
    width: 80%;
    height: 100%;
}

main{
    width: 80%;
    display: block;
    margin: 0 auto;
    text-align: left;
    margin-top: 65px;

}  
.slova{
    
    display: block;
    margin: 30px auto; 
    text-align: left;

}
.slova p{
    color: white;
   
}

.slova h2{
    color: white;
    font-size: 36px;
}

.stat{
    color: white;

}
.ims{
    margin-top: 40px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
  
   
}
.ims img{
    text-align: center;
   width: 520px;
   height: 320px; 
   border: #000000 2px solid ;
   border-radius: 20px;
   filter: blur(2px);
   overflow: hidden;
  
transition:transform 0.5s;

}

.image-container {
    position: relative; /* Для абсолютного позиционирования overlay */
}

.overlay {
    position: absolute;  /* Позволяет overlay занимать пространство над изображением */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный фон */
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0; /* Исходная непрозрачность */
    transition: opacity 0.5s; /* Плавный переход */
    border-radius: 20px;
    border: #000000 2px solid ;
    width: 520px;
    height: 320px; 
}

.image-container:hover .overlay {
    opacity: 1; /* Увеличиваем непрозрачность при наведении */
}
.text1 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text2 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text3 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text4 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}

.ims img:hover{
transform: scale(0.9);

}

.ims a{
color: white;

}

.ser{
    float: left;
 
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}
.pg3{
float: left;

display: flex;
justify-content: space-between;
    flex-direction: column;
}
.contact {
    display: block;
    margin: 20px auto;
    text-align: left;
}

.contact div {
    display: flex; /* Используем flexbox для выравнивания элементов в ряд */
    margin: 20px auto;
    gap: 5px; /* Добавим промежуток между заголовками */
}

.contact h1 {
    font-size: 40px;
    color: #04BFD3;
}

.contact h2 {
    font-size: 36px;
    color: white;
}

.contact h4{
    color: white;
}

input{
    width: 386px;
    height: 30px;
    border: #000000 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
 
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
}
.btn{
    display: flex;
    justify-content: center; /* Центрирует по горизонтали */
    align-items: center;     /* Центрирует по вертикали */
    height: 10vh;    
}

.formContainer button {
    padding: 10px 20px; 
    width: 444px;                        /* Примерные отступы для кнопки */
    height:52px ;
    font-size: 16px;         /* Размер шрифта */
    background-color: #14FDCE; /* Цвет фона кнопки */
    border: none;            /* Убираем обводку */
    border-radius: 10px;      /* Скругление углов */
    color: rgb(0, 0, 0);            /* Цвет текста */
    cursor: pointer;        /* Курсор для кнопки */
}

footer{
    margin-top: 100px;
    background-color:#001A20 ;
  width: 100%;  
   height: 376px;
   text-decoration: none;
   
   
}
.top {
    color: white;
    text-align: left;
    padding-left: 20px;
    padding-top: 15px;
    flex: 1;      
    display: flex;           /* Flexbox для выравнивания элементов в строку */
    justify-content: space-between; /* Пространство между элементами */
    align-items: center;  
     text-decoration: none;       /* Позволяет элементу занять доступное пространство */
}

.menu a{
    text-decoration: none;
    color: white;
    font-size: 16px;
    padding-right: 20px;
}

.menu {
    list-style: none;        /* Убираем стандартные маркеры списка */
    margin: 10px 0 5px;      /* Отступы сверху и снизу */
    padding: 0;              /* Убираем внутренние отступы */
    display: flex;           /* Flexbox для выравнивания элементов в ряд */
    justify-content: flex-end; /* Выравнивание элементов списка по правому краю */
    gap: 15px;     
          /* Промежутки между элементами */
}

.menu li {
    display: inline-block;   /* Элементы списка будут располагаться в строку */
    font-size: 16px;   
            /* Размер шрифта */
}

.menu ul{
text-decoration: none;  

}
.create-line
 { width: 100%;
   border-top: 3px solid #ffffff; 
}
.bott {
    display: block;  /* Элементы будут располагаться в одну строку */
    text-align: left;      /* Выравнивание текста по левому краю */
    color: white;          /* Цвет текста */
    margin: 30px auto;      /* Растягиваем элемент на всю доступную ширину (если нужно) */
}
.bott div{
    padding-left: 20px;
}
body {
    background: #1690A7;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    flex-direction: column;
}

*{
    font-family: sans-serif;
    box-sizing: border-box;
}

form {
    width: 500px;
    border: 2px solid #ccc;
    padding: 30px;
    background: #fff;
    border-radius: 15px;
}

h2 {
    text-align: center;
    margin-bottom: 40px;
}

input {
    display: block;
    border: 2px solid #ccc;
    width: 95%;
    padding: 10px;
    margin: 10px auto;
    border-radius: 5px;
}
label {
    color: #888;
    font-size: 18px;
    padding: 10px;
}

button {
    float: right;
    background: #555;
    padding: 10px 15px;
    color: #fff;
    border-radius: 5px;
    margin-right: 10px;
    border: none;
}
button:hover{
    opacity: .7;
}
.error {
   background: #F2DEDE;
   color: #A94442;
   padding: 10px;
   width: 95%;
   border-radius: 5px;
   margin: 20px auto;
}

.success {
   background: #D4EDDA;
   color: #40754C;
   padding: 10px;
   width: 95%;
   border-radius: 5px;
   margin: 20px auto;
}

h1 {
    text-align: center;
    color: #fff;
}

.ca {
    font-size: 14px;
    display: inline-block;
    padding: 10px;
    text-decoration: none;
    color: #444;
}
.ca:hover {
    text-decoration: underline;
} 
@import url('https://fonts.googleapis.com/css?family=Ubuntu+Condensed');
.menu-main {
  list-style: none;
  margin: 10px 0 5px;
  text-align: center;
}
.menu-main li {display: inline-block;}
.menu-main li:after {
  content: "|";
  color: #606060;
  display: inline-block;
  vertical-align:top;
}
.menu-main li:last-child:after {content: none;}
.menu-main a {
  text-decoration: none;
  font-family: 'Ubuntu Condensed', sans-serif;
  letter-spacing: 2px;
  position: relative;
  padding-bottom: 20px;
  margin: 0 34px 0 30px;
  font-size: 17px;
  text-transform: uppercase;
  display: inline-block;
  transition: color .2s;
}
.menu-main a, .menu-main a:visited {color: #9d999d;}
.menu-main a.current, .menu-main a:hover{color: #008fa1;}
.menu-main a:before,
.menu-main a:after {
  content: "";
  position: absolute;
  height: 4px;
  top: auto;
  right: 50%;
  bottom: -5px;
  left: 50%;
  background: #008fa1;
  transition: .8s;
}
.menu-main a:hover:before, .menu-main .current:before {left: 0;}
.menu-main a:hover:after, .menu-main .current:after {right: 0;}   
@media (max-width: 550px) {
.menu-main {padding-top: 0;}
.menu-main li {display: block;}
.menu-main li:after {content: none;}
.menu-main a {
  padding: 25px 0 20px; 
  margin: 0 30px;
}
}


p{
    color: white;
}
*{
    font-family:"Roboto";
   
    padding: 0;
 
}
h2, h3 , h4, p{
    color: white
    
}
text{
    color: white
}

header {
    height: 500px; /* Уберите лишние строки с height */
    position:static;
    top: 0;
    left: 0;
    background-image: url(image/lines.gif);
    background-size: cover;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}


  .searchs{
    margin-top: 180px;
    text-align: center;
  } 

  
  .searc{
    width: 386px;
    height: 30px;
    border: #15171E 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
    background-image: url(/image/icons8-лупа-50.png)  ;
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
  
  
    
  }

  ::placeholder{
    color: #15171E;
  }

  .inter{
    position: relative;
    color: white;
    display: block;
     margin-top: -23px; 
    font-size: 16px;
    right: 8%;
    padding-bottom: 20px;
    float: left;
}
    
  
  
   li, ul {
    color: white;
    
  }
.ras{
    color: white;
    font-size: 32px;
    text-align: center;
    /* translate: (-50%, -50%) */
}

h1{
    color: white;
    font-size: 64px;
    text-align: center;
    /* translate: (-50%, -50%) */
}


body {
    height: 100vh;
    display: flexbox;
    align-items: center;
    justify-content: center;
    background-color: #15171E;
    margin: 0;
  }

.container {
   
    margin: auto auto;
    text-align: center;
    width: 80%;
    height: 100%;
}

main{
    width: 80%;
    display: block;
    margin: 0 auto;
    text-align: left;
    margin-top: 65px;

}  

.slova{
    
    display: block;
    margin: 30px auto; 
    text-align: left;

}
.slova p{
    color: white;
   
}

.slova h2{
    color: white;
    font-size: 36px;
}

.stat{
    color: white;

}
.ims{
    margin-top: 40px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 30px;
  
   
}
.ims img{
    text-align: center;
   width: 520px;
   height: 320px; 
   border: #000000 2px solid ;
   border-radius: 20px;
   filter: blur(2px);
   overflow: hidden;
  
transition:transform 0.5s;

}

.image-container {
    position: relative; /* Для абсолютного позиционирования overlay */
}

.overlay {
    position: absolute;  /* Позволяет overlay занимать пространство над изображением */
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.5); /* Полупрозрачный фон */
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0; /* Исходная непрозрачность */
    transition: opacity 0.5s; /* Плавный переход */
    border-radius: 20px;
    border: #000000 2px solid ;
    width: 520px;
    height: 320px; 
}

.image-container:hover .overlay {
    opacity: 1; /* Увеличиваем непрозрачность при наведении */
}
.text1 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text2 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text3 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}
.text4 {
    color: white;
    font-size: 24px; /* Размер шрифта */
    text-align: center;
}

.ims img:hover{
transform: scale(0.9);

}

.ims a{
color: white;

}

.ser{
    float: left;
 
    display: flex;
    justify-content: space-between;
    flex-direction: column;
}
.pg3{
float: left;

display: flex;
justify-content: space-between;
    flex-direction: column;
}
.contact {
    display: block;
    margin: 20px auto;
    text-align: left;
}

.contact div {
    display: flex; /* Используем flexbox для выравнивания элементов в ряд */
    margin: 20px auto;
    gap: 5px; /* Добавим промежуток между заголовками */
}

.contact h1 {
    font-size: 40px;
    color: #04BFD3;
}

.contact h2 {
    font-size: 36px;
    color: white;
}

.contact h4{
    color: white;
}

input{
    width: 386px;
    height: 30px;
    border: #000000 2px;
    border-radius: 40px;
    padding-top: 6px ;
    padding-bottom: 6px;
    padding-left: 140px; 
 
    background-position:10px 6px;
    background-repeat: no-repeat;
    background-size: 20px 20px;
    margin-top: 20px;
}
.btn{
    display: flex;
    justify-content: center; /* Центрирует по горизонтали */
    align-items: center;     /* Центрирует по вертикали */
    height: 10vh;    
}

.formContainer button {
    padding: 10px 20px; 
    width: 444px;                        /* Примерные отступы для кнопки */
    height:52px ;
    font-size: 16px;         /* Размер шрифта */
    background-color: #14FDCE; /* Цвет фона кнопки */
    border: none;            /* Убираем обводку */
    border-radius: 10px;      /* Скругление углов */
    color: rgb(0, 0, 0);            /* Цвет текста */
    cursor: pointer;        /* Курсор для кнопки */
}

footer{
    margin-top: 100px;
    background-color:#001A20 ;
  width: 100%;  
   height: 376px;
   text-decoration: none;
   
   
}
.top {
    color: white;
    text-align: left;
    padding-left: 20px;
    padding-top: 15px;
    flex: 1;      
    display: flex;           /* Flexbox для выравнивания элементов в строку */
    justify-content: space-between; /* Пространство между элементами */
    align-items: center;  
     text-decoration: none;       /* Позволяет элементу занять доступное пространство */
}

.menu a{
    text-decoration: none;
    color: white;
    font-size: 16px;
    padding-right: 20px;
}

.menu {
    list-style: none;        /* Убираем стандартные маркеры списка */
    margin: 10px 0 5px;      /* Отступы сверху и снизу */
    padding: 0;              /* Убираем внутренние отступы */
    display: flex;           /* Flexbox для выравнивания элементов в ряд */
    justify-content: flex-end; /* Выравнивание элементов списка по правому краю */
    gap: 15px;     
          /* Промежутки между элементами */
}

.menu li {
    display: inline-block;   /* Элементы списка будут располагаться в строку */
    font-size: 16px;   
            /* Размер шрифта */
}

.menu ul{
text-decoration: none;  

}
.create-line
 { width: 100%;
   border-top: 3px solid #ffffff; 
}
.bott {
    display: block;  /* Элементы будут располагаться в одну строку */
    text-align: left;      /* Выравнивание текста по левому краю */
    color: white;          /* Цвет текста */
    margin: 30px auto;      /* Растягиваем элемент на всю доступную ширину (если нужно) */
}
.bott div{
    padding-left: 20px;
}
#about { 
    color: white;
}
.ots{
    color:white ;
}
dt{
    color: white;
}
dd{
    color: white;
}

.contact a{

    color: white;
}
